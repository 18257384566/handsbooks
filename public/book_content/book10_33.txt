s:4666:"面向对象八天
1、面向对象的基本语法
2、封装性
3、继承性
4、常用的关键字及魔术方法
5、多态性
6、异常处理
7、PDO数据库抽象层
8、namespace和trait

常用类书写

数据库操作
文件上传
验证码生成
分页功能


第一天 面向对象
=============================================================================
	1. 面向对象的介绍
		1.1 面向对象的两个方向
            思想  语法
		1.2 对象
            一切皆对象
		1.3 面向对象
            用对象的思维编程
		1.4 面向过程
            基础课
            特点：强调步骤    函数
            优点：执行效率高
            缺点：不灵活
            
		1.5 面向对象的优点
            
            优点：灵活 可扩展
            缺点：不能提高运行效率
            
	    1.6 面向对象编程的特点
            三大特性：封装  继承  多态
            
		1.7 PHP中的面向对象
            PHP4 因为java 部分支持
            PHP5 支持比较完善
            PHP5.4 命名空间和trait
            PHP5.6 进一步完善
            PHP7   加入新语法
            
		1.8 注意
	    不能提高代码运行效率
            提高软件开发效率
            
	2. 类和对象的关系
		1.1 类和对象的关系
            类是对象的抽象
            对象是类的实例
            
		1.2 对象（存在在内存当中动态的）
            属性          
            方法          

		1.3 类（存在文件当中静止的）
            属性          
            方法 

二、抽象一个类
		1. 类的定义
            格式：
            class 类名
            {
                //属性
                //方法
            }
            注意：遵循PSR编码规范，{}都要独占一行，类名必须为大驼峰
        
		2. 成员属性
            格式：
            修饰符 属性名 [ = 值];
            注意：
                ① 属性必须要修饰符
                ② 修饰符如果为var 不推荐 PHP4的语法，现在依然向下兼容
                ③ 常见修饰符  public protected private (3P)  
                ④ 属性不能重新定义
                ⑤ 属性赋值可以为常量
                ⑥ 属性赋值为直接量，不能为表达式
                ⑦ 赋值不要为null无意义
                
		3. 成员方法
			格式：
            [修饰符] function 方法名()
            {
                coding...
            }
            注意：
                ① 可以不加修饰符，但不加默认为public 建议加上
                ② 方法不能重复定义
                ③ 方法调用必须使用对象，参数的使用和函数语法一样
                
                
        练习：
            User类
            属性：姓名、年龄、性别
            方法：睡觉、跑步
            实例化并调用跑步方法
            
三、对象的操作
		1. 实例化一个对象
            $obj = new 类名();
		2. 对象成员的访问
            $obj->成员（属性/方法）;
		3. $this
            只能在方法中调用，调用对象成员（属性,方法）;
            表示调用方法的对象本身
            
		4. 对象在内存中的存贮
            对象  堆       先生成  后销毁
            地址  栈
            方法  代码段
            常量  数据段
           
		5. 构造方法和析构方法
            魔术方法：   __funName()   不会主动调用，而是符合触发条件时自动调用  大多数为public 
            
            5.1 构造：
                public function __construct()
                {
                  
                }
            调用条件：
                当实例化对象时自动调用
            作用：
                为属性赋初始值
                打开资源
                对象使用前工作
            
            5.2 析构：
                public function __destruct()
                {
                    
                }
            调用条件：
                当对象被销毁或脚本执行结束自动销毁回收内存时触发
                
                注意：对象的销毁顺序按入栈顺序倒叙
               
            作用：
                关闭资源
                销毁前的对象遗言
                
            
            
            
            ";